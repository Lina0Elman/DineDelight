name: Publish Build APK AAB Artifacts
# See https://github.com/marketplace/actions/automated-build-android-app-with-github-action

env:
  # The name of the main module repository
  main_project_module: app

  # The name of the Play Store
  playstore_name: Build

# Allow the workflow to create a new release
permissions:
  contents: write

on:

  push:
    branches:
      - 'main'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Import google-services.json from GitHub Secrets
      - name: Create google-services.json
        run: echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 -d > ${{ env.main_project_module }}/src/google-services.json

      # Set Current Date As Env Variable
      - name: Set current date as env variable
        run: echo "date_today=$(date +'%Y-%m-%dT%H-%M-%S')" >> $GITHUB_ENV

      # Set Repository Name As Env Variable
      - name: Set repository name as env variable
        run: echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV

      - name: Set Up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '17'
          cache: 'gradle'

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

#      # Run Tests Build
#      - name: Run gradle tests
#        run: ./gradlew test

      # Run Build Project
      - name: Build gradle project
        run: ./gradlew build

      # Create APK Debug
      - name: Build apk debug project (APK) - ${{ env.main_project_module }} module
        run: ./gradlew assembleDebug

      # Create APK Release
      - name: Build apk release project (APK) - ${{ env.main_project_module }} module
        run: ./gradlew assemble

      # Create Bundle AAB Release
      # Noted for main module build [main_project_module]:bundleRelease
      - name: Build app bundle release (AAB) - ${{ env.main_project_module }} module
        run: ./gradlew ${{ env.main_project_module }}:bundleRelease

      # CREATE A NEW GITHUB RELEASE
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.date_today }}
          release_name: Release ${{ env.date_today }}
          draft: false
          prerelease: false

      # UPLOAD APK DEBUG
      # Noted For Output [main_project_module]/build/outputs/apk/debug/
      - name: Upload APK Debug to GitHub Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.main_project_module }}/build/outputs/apk/debug/app-debug.apk
          asset_name: app-debug-${{ env.date_today }}.apk
          asset_content_type: application/vnd.android.package-archive

      # UPLOAD APK RELEASE
      # Noted For Output [main_project_module]/build/outputs/apk/release/
      - name: Upload APK Release to GitHub Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.main_project_module }}/build/outputs/apk/release/app-release-unsigned.apk
          asset_name: app-release-unsigned-${{ env.date_today }}.apk
          asset_content_type: application/vnd.android.package-archive

      # UPLOAD AAB RELEASE
      # Noted For Output [main_project_module]/build/outputs/bundle/release/
      - name: Upload AAB Release to GitHub Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.main_project_module }}/build/outputs/bundle/release/app-release.aab
          asset_name: app-release-${{ env.date_today }}.aab
          asset_content_type: application/octet-stream
